/*************************************************************************************************//* Copyright 2005 Shane D. Looker.                                                               *//*                                                                                               *//* This source code is being made available as free sample code as is. No warantee, express or   *//* implied is made as to the quality or correctness of this code.                                *//* This source code may be freely distributed as long as this copyright notice remains attached. *//* Check http://www.MacCommando.com for updated source.                                          *//*************************************************************************************************/// ToolParser.h// The Tool Parser finds a file of the format {ToolName}.cmdo// After it opens it, it will create a list of panes and a list of controls for each// of those panes// For now it will also take the TabPanel to update. This should be split into a// separate class so I can update the parser more cleanly in the future.// This is a basic model class// The TabPanel filler is a view class// There is no real controller class right now. TBD#import <Cocoa/Cocoa.h>#define USE_STREAMBUF 1#if ! USE_STREAMBUF#import	<fstream>#else#import <sstream>#endif#include "AssociatedTable.h"// Base SearchPath will either be "/" or UserHome. This will get appended on too one of thoseconst	char	kSearchPath[] = "Library/Preferences/com.ShanesGames.Commando/";@interface ToolParser : NSObject{	NSString	*mPrototypeLine;	NSString	*mCreditLine;	NSString	*mToolSummaryLine;	int			mFormatVers;	AssociatedTable	*mPanelDictionary;	}- (id) init;- (NSString*) prototypeLine;- (NSString*) toolSummaryLine;- (NSString*) creditLine;- (AssociatedTable*) panelDictionary;- (BOOL) loadCommandDefinitionArgc: (int) argc Argv: (char**) argv;#if	USE_STREAMBUF- (void) readCommandPrototype: (std::stringstream*) inStream;- (void) readPanels: (std::stringstream*) inStream;- (void) readVersion: (std::stringstream*) inStream;- (void) readToolSummaryLine: (std::stringstream*) inStream;- (void) readCreditLine: (std::stringstream*) inStream;#else- (void) readCommandPrototype: (std::ifstream*) inStream;- (void) readPanels: (std::ifstream*) inStream;- (void) readVersion: (std::ifstream*) inStream;- (void) readToolSummaryLine: (std::ifstream*) inStream;- (void) readCreditLine: (std::ifstream*) inStream;#endif- (void) parseOptionLine: (std::string*) line intoArray: (NSMutableArray*) controlArray; // intoTab: (NSTabViewItem*) theTab;// Panel Array//NSDictionary// TabName (key), ItemList (NSMutableArray)@end