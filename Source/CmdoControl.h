// Hierarchy// CmdoControl//    Switch//    Radio Group//		NSMatrix//		array of Radio controls//    Distributed List//    // Each control has an action that happens when it is hit using delgate// Set thbe action handler for each control. When the handler fires, I set the// dictionary entry for that CmdoControl dictionary itemenum {	kCmdoControlItem = 0,	kCmdoPrototypeMatch,	kCmdoControlType,	kCmdoFlagLiteralSubs,	kCmdoControlLabel,	kCmdoControlToolTipText};extern NSMutableDictionary	*gRadioDict;extern NSMutableDictionary	*gAllOptionControls;extern NSMutableDictionary	*gSubstitutionDictionary;extern	int	gLastControlTag;extern	int	gMaxColumnWidth;			// Hack value so the controls should figure out their max width#import "CommandoWindowController.h"@interface CmdoControl : NSObject{		NSControl*	mControl;	CommandoWindowController*	mParent;		NSRect		mRect;	// Minimal rectangle}	+ (id) initWithData: (NSMutableArray*) theData forController: (CommandoWindowController*) theParent;- (int) nextTag;+ (NSString*) makeSubstitutionKey: (NSString*) aNumberStr;- (NSControl*) control;- (void) addTextField: NSTextFieldView;- (float) height;- (void) GetDictionaryEntry;- (NSString*)	textItem;		// This can be an NSString or nil- (id) copyWithZone: (NSZone*) zone;@end